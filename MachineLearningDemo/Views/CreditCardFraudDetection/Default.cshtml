@model CreditCardFraudDetection.Models.TestDataViewModel
@using CreditCardFraudDetection.Helpers

@{
    ViewData["Title"] = "Home";
}

@if (!FileHelper.ModelExists)
{
    <style>
        #form, #samples, #remove-button {
            display: none;
        }
    </style>
}

<style>
    table {
        width: 100%;
        max-width: 100%;
    }

    th {
        background: #000;
        color: #fff;
    }

    th, td {
        padding: 10px;
    }

    tr:nth-child(even) {
        background-color: #fafafa;
        border-top: 1px silver solid;
        border-bottom: 1px silver solid;
    }

    hr {
        margin: 20px 0 !important;
    }
</style>

<h1>Credit Card Fraud Prediction using ML.NET</h1>

<hr />

<h2>Model Training</h2>
<div id="upload-container">
    <form id="upload" enctype="multipart/form-data">
        <input type="file" name="file" class="form-control" id="fileUpload" style="padding: 3px" /><br />
        <button id="upload-button" class="btn btn-secondary">Upload!</button>
    </form>

    <button id="remove-button" class="btn btn-info">Remove Model</button>

    <div id="loader">Training: </div>
</div>

<hr />

<div class="row">
    <div class="col-md-8">
        <form id="form">
            <h2>Form Section</h2>

            <div class="text-danger"></div>
            <div class="row">
                <div class="form-group col-md-3">
                    <label class="control-label">Time</label>
                    <input class="form-control" type="text" name="Time" />
                </div>

                @{
                    for (var x = 1; x <= 28; x++)
                    {
                        <div class="form-group col-md-3">
                            <label class="control-label">V@(x)</label>
                            <input class="form-control" type="text" name="V@(x)" />
                        </div>
                    }
                }

                <div class="form-group col-md-3">
                    <label class="control-label">Amount</label>
                    <input class="form-control" type="text" name="Amount" />
                </div>
            </div>

            <div class="form-group">
                <input type="submit" value="Predict" class="btn btn-primary" style="display:none" />
            </div>
        </form>

        <div class="row" id="prediction" style="display: none">
            <hr style="width: 100%" />

            <div class="col-md-6">
                <h3>Prediction: <span></span></h3>
            </div>

            <div class="col-md-6">
                <h3>Score: <span></span></h3>
            </div>
        </div>
    </div>

    <div class="col-md-4" id="samples">
        <h4>Fraud Samples</h4>
        <p>The following samples are already defined as fraud. We want to test our model if it can accurately predict that they are fraud.</p>

        <table>
            <tr>
                <th>#</th>
                <th>Time</th>

                @{
                    for (var x = 1; x <= 28; x++)
                    {
                        <th style="display:none">V@(x)</th>
                    }
                }

                <th>Amount</th>
                <th>Action</th>
            </tr>

            @{
                var fraudCounter = 0;
                foreach (var fraud in Model.FraudList)
                {
                    <tr>
                        <td>Sample @(++fraudCounter)</td>
                        <td>@fraud.Time</td>

                        @for (var x = 1; x <= 28; x++)
                        {
                            <td style="display: none">@fraud.GetType().GetProperty("V" + x).GetValue(fraud)</td>
                        }

                        <td>@fraud.Amount</td>
                        <td><button>Predict</button></td>
                    </tr>
                }
            }
        </table>

        <br />

        <h4>Valid Samples</h4>
        <p>The following samples are valid transactions.</p>

        <table>
            <tr>
                <th>#</th>
                <th>Time</th>

                @{
                    for (var x = 1; x <= 28; x++)
                    {
                        <th style="display:none">V@(x)</th>
                    }
                }

                <th>Amount</th>
                <th>Action</th>
            </tr>
            @{
                var validCount = 0;
                foreach (var valid in Model.ValidList)
                {
                    <tr>
                        <td>Sample @(++validCount)</td>
                        <td>@valid.Time</td>

                        @for (var x = 1; x <= 28; x++)
                        {
                            <td style="display:none">@valid.GetType().GetProperty("V" + x).GetValue(valid)</td>
                        }

                        <td>@valid.Amount</td>
                        <td><button>Predict</button></td>
                    </tr>
                }
            }
        </table>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial-CreditCardFraudDetection");}
}