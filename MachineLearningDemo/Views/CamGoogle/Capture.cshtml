@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Google Label Detection</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href="~/css/styles.css" rel="stylesheet" />
    <link href="~/css/bootstrap.css" rel="stylesheet" />
</head>
<body>

    <div class="container">
        <div class="col-md-4"></div>
        <div class="col-md-4">
            <div class="app">
                <a href="#" id="start-camera" class="visible">Touch here to start the app.</a>
                <video id="camera-stream"></video>
                <img id="snap">
                <p id="error-message">
                </p>
                <div class="controls">
                    <a href="#" id="delete-photo" title="Delete Photo" class="disabled">
                        <i class="material-icons">
                            delete
                        </i>
                    </a> <a href="#" id="take-photo" title="Take Photo">
                        <i class="material-icons">
                            camera_alt
                        </i>
                    </a> <a href="#" id="download-photo" download="selfie.png" title="Save Photo"
                            class="disabled"><i class="material-icons">file_download</i></a>
                </div>
                <!-- Hidden canvas element. Used for taking snapshot of video. -->
                <canvas width="300" height="400"></canvas>
            </div>
        </div>
        <div class="col-md-4"></div>
    </div>
    <div class="Image Upload">
        <form method="post" id="registerForm" enctype="multipart/form-data" action="@Url.Action("CaptureImage", "CamGoogle")" class="p-5 bg-white">

            <div class="row form-group">
                <div class="col-md-3">

                </div>
                <div class="col-md-3">
                    <label class="text-black" for="Name">Upload Image</label>
                    <input type="file" name="imagefile" id="captureFile" class="form-control">
                </div>
                <div class="col-md-1">
                    <input type="button" onclick="Submit();" id="submit" class="sub-btn form-control" value="Submit">
                </div>
            </div>
        </form>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div id="ResponseTable">
                </div>
            </div>
        </div>
    </div>
    <script src="~/js/CanvasGoogleScript.js"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.min.js"></script>
    <style>
        .contant {
            border: 1px solid #ddd;
            border-radius: 4px;
            width: 500px;
            padding: 20px;
            margin: 0 auto;
            text-align: center;
        }

        .sub-btn {
            margin-top: 24px;
            background-color: #0c0c8a;
            color: orange;
            border: none;
        }
    </style>

    @*<script>
        function Submit() {
            //var ctx = document.getElementById('imagefile');
            //if (ctx.getContext) {
            //    ctx = ctx.getContext('2d');
            //    var datacaptured = ctx.toDataURL('image/jpeg');
            var datacaptured;
            var file = document.getElementById('imagefile').files[0],
                    canvas = document.getElementById('canvas-img'),
                    hidden = document.getElementById('hidden1'),
                    ctx = canvas.getContext("2d"),
                    img = document.createElement("img"),
                    reader = new FileReader();

                reader.onload = function (e) {
                    img.src = e.target.result;
                }

                img.onload = function () {
                    ctx.drawImage(img, 0, 0);
                    datacaptured = canvas.toDataURL("image/jpeg", 0.5);
                }

                $.ajax({
                    type: 'POST',
                    url: ("/CamGoogle/Capture"),
                    dataType: 'json',
                    data: { base64String: datacaptured },
                    success: function (data) {
                        if (data == false) {

                            alert("Photo Captured is not Proper!");
                            $('#ResponseTable').empty();
                        }
                        else {

                            if (data.length == 9) {
                                $('#ResponseTable').empty();
                                alert("Its not a Face!");
                            } else {
                                var count = 1;
                                var _faceAttributes = data.labels;


                                var _responsetable = "";
                                var _emotiontable = "";
                                _responsetable += '<div class="panel panel-default"><div class="panel-heading">Google Face API Response</div>';
                                _responsetable += "<div class='panel-body'>"
                                _responsetable += '<table class="table table-bordered"><thead><tr> <th>Description</th> <th>score</th></tr></thead>';

                                for (var i = 0; i < _faceAttributes.length; i++) {

                                    _responsetable += '<tr><td>' +
                                        _faceAttributes[i].Description +
                                        '</td><td>' +
                                        _faceAttributes[i].Score +
                                        '</td></tr>';


                                }

                                for (var i = 0; i < data.faceAnnotations.length; i++) {

                                    _responsetable += '<tr><td>' + "Face" + '</td><td>' +
                                        count++ +
                                        '</td></tr>';

                                    _responsetable += '<tr><td>' + "Joy" + '</td><td>' +
                                        getannotation(data.faceAnnotations[i].JoyLikelihood) +
                                        '</td></tr>';

                                    _responsetable += '<tr><td>' + "Anger" + '</td><td>' +
                                        getannotation(data.faceAnnotations[i].AngerLikelihood) +
                                        '</td></tr>';

                                    _responsetable += '<tr><td>' + "Sorrow" + '</td><td>' +
                                        getannotation(data.faceAnnotations[i].SorrowLikelihood) +
                                        '</td></tr>';

                                    _responsetable += '<tr><td>' + "Surprise" + '</td><td>' +
                                        getannotation(data.faceAnnotations[i].SurpriseLikelihood) +
                                        '</td></tr>';

                                    _responsetable += '<tr><td>' + "detectionConfidence" + '</td><td>' +
                                        data.faceAnnotations[i].DetectionConfidence +
                                        '</td></tr>';
                                    _responsetable += '<tr><td>' + "landmarkingConfidence" + '</td><td>' +
                                        data.faceAnnotations[i].LandmarkingConfidence +
                                        '</td></tr>';


                                    //              for (var j = 0; j < data.faceAnnotations[i].Landmarks.length; j++)
                                    //              {
                                    //                  _responsetable += '<tr><td>' + "type" + '</td><td>' +
                                    //                      data.faceAnnotations[i].Landmarks[j].Type +
                                    //'</td></tr>';
                                    //                  _responsetable += '<tr><td>' + "X position" + '</td><td>' +
                                    //                      data.faceAnnotations[i].Landmarks[j].Position.X +
                                    //'</td></tr>';
                                    //                  _responsetable += '<tr><td>' + "Y position" + '</td><td>' +
                                    //                      data.faceAnnotations[i].Landmarks[j].Position.Y +
                                    //'</td></tr>';
                                    //                  _responsetable += '<tr><td>' + "Z position" + '</td><td>' +
                                    //                      data.faceAnnotations[i].Landmarks[j].Position.Z+
                                    //'</td></tr>';


                                    //              }

                                }

                                _responsetable += "</table></div></div>"
                                $('#ResponseTable').append(_responsetable);
                            }
                        }
                    }
                });
            }
        }
    </script>*@
    <script>

        $(document).ready(function () {
            function getannotation(type) {
                if (type == 1) {
                    return "VeryUnlikely";
                }
                else if (type == 2) {
                    return "Unlikely";
                }
                else if (type == 3) {
                    return "Possible";
                }
                else if (type == 4) {
                    return "Likely";
                }
                else if (type == 5) {
                    return "VeryLikely";
                }
                else {
                    return "Unknown";
                }
            }
        

            $("#captureFile").change(function () {
            var datapost = new FormData();
            var files = $("#captureFile");
            if (files.length > 0) {
                datapost.append("ClassifyImages", files[0]);
            }
            $.ajax({
                type: 'POST',
                url: ("/CamGoogle/CaptureImage"),
                processData: false,
                contentType: false,
                data: $(files).serialize(),
                success: function (data) {
                    //code after success
                    $('#ResponseTable').empty();
                    console.log(data);
                    var count = 1;
                    var _faceAttributes = data.labels;


                    var _responsetable = "";
                    var _emotiontable = "";
                    _responsetable += '<div class="panel panel-default"><div class="panel-heading">Google Face API Response</div>';
                    _responsetable += "<div class='panel-body'>"
                    _responsetable += '<table class="table table-bordered"><thead><tr> <th>Description</th> <th>score</th></tr></thead>';

                    for (var i = 0; i < _faceAttributes.length; i++) {

                        _responsetable += '<tr><td>' +
                            _faceAttributes[i].Description +
                            '</td><td>' +
                            _faceAttributes[i].Score +
                            '</td></tr>';


                    }

                    for (var i = 0; i < data.faceAnnotations.length; i++) {

                        _responsetable += '<tr><td>' + "Face" + '</td><td>' +
                            count++ +
                            '</td></tr>';

                        _responsetable += '<tr><td>' + "Joy" + '</td><td>' +
                            getannotation(data.faceAnnotations[i].JoyLikelihood) +
                            '</td></tr>';

                        _responsetable += '<tr><td>' + "Anger" + '</td><td>' +
                            getannotation(data.faceAnnotations[i].AngerLikelihood) +
                            '</td></tr>';

                        _responsetable += '<tr><td>' + "Sorrow" + '</td><td>' +
                            getannotation(data.faceAnnotations[i].SorrowLikelihood) +
                            '</td></tr>';

                        _responsetable += '<tr><td>' + "Surprise" + '</td><td>' +
                            getannotation(data.faceAnnotations[i].SurpriseLikelihood) +
                            '</td></tr>';

                        _responsetable += '<tr><td>' + "detectionConfidence" + '</td><td>' +
                            data.faceAnnotations[i].DetectionConfidence +
                            '</td></tr>';
                        _responsetable += '<tr><td>' + "landmarkingConfidence" + '</td><td>' +
                            data.faceAnnotations[i].LandmarkingConfidence +
                            '</td></tr>';



                    }

                    _responsetable += "</table></div></div>"
                    $('#ResponseTable').append(_responsetable);

                },
                error: function (er) {
                    alert(er);
                }

            });
        });

        });
    </script>
</body>
</html>

