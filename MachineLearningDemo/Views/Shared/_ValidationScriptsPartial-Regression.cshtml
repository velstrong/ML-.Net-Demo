@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    var $sentimentform = $('#regressionform'),
        $regressionupload = $('#regressionupload'),
        $loader = $('#loader'),
        $primaryButton = $('.btn-primary'),
        $removeButton = $('#remove-button');

    $sentimentform.on('submit', function (e) {
        e.preventDefault();

        $.ajax({
            url: '@Url.Action("Analysis", "CallRegression")',
            method: 'POST',
            data: $(this).serialize(),
            success: function (data) {
                if (data.status == 1) {
                    $('#result').show();
                    RenderChart(data.actual,data.predicted);
                    //$('#score').text(data.result.score);
                    //if (data.result.prediction) {
                    //    $('#prediction').text("Positive");
                    //    $('#predictionh').css("color", "green");
                    //} else {
                    //    $('#prediction').text("Negative");
                    //    $('#predictionh').css("color", "red");
                    //}
                }
            }
        });

    });

    $regressionupload.on('submit', function (e) {
        e.preventDefault(); // stop the standard form submission

        if ($(this).find('input[type="file"]').val() == '') {
            alert('Please select a file!');
            return;
        }

        if (confirm("Are you sure you want to train the model with the attached file? This will take a while.")) {
            $.ajax({
                url: '@Url.Action("Train", "CallRegression")',
                type: 'POST',
                data: new FormData(this),
                cache: false,
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data.status == 1) {
                        $sentimentform.show();
                        $removeButton.show();
                        alert('Training Complete!');
                        $('#trainResult').html(data.result.replace('*', '').split('-').join('<br>'));
                        NextStep();
                    }

                    $sentimentupload[0].reset();
                    $loader.removeClass('show');
                },
                error: function (xhr, error, status) {
                    console.log(error, status);
                    alert('An error has occurred. Please try again!');

                    $loader.removeClass('show');
                }
            });

            $loader.addClass('show');
        }
    });

    $('#remove-button').on('click', function () {
        if (confirm("Are you sure you want to delete the trained model?")) {
            $.ajax({
                url: '@Url.Action("RemoveModel", "Home")'
            }).done(function (data) {
                if (data.status == 1) {
                    $form.hide();
                    $removeButton.hide();
                }
                else {
                    alert('Unable to delete model');
                }
            });
        }
    });

   function RenderChart(actual,predicted) {

        var options = {
            animationEnabled: true,
            theme: "light2",
            title: {
                text: "Actual vs Projected Calls"
            },
            axisY: {
                title: "Number of Calls",
                minimum: 1
            },
            toolTip: {
                shared: true
            },
            legend: {
                cursor: "pointer",
                verticalAlign: "bottom",
                horizontalAlign: "left",
                dockInsidePlotArea: true,
                itemclick: toogleDataSeries
            },
            data: [{
                type: "line",
                showInLegend: true,
                name: "Projected Calls",
                markerType: "square",
               color: "#228B22",
                dataPoints: predicted
            },
            {
                type: "line",
                showInLegend: true,
                name: "Actual Calls",
                lineDashType: "dash",
                color: "#F08080",
                dataPoints: actual
            }]
        };
        $("#chartContainer").CanvasJSChart(options);
    }

function toogleDataSeries(e){
	if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible) {
		e.dataSeries.visible = false;
	} else{
		e.dataSeries.visible = true;
	}
	e.chart.render();
}

</script>